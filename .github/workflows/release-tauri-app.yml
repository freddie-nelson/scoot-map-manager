name: release-tauri-app

on:
  push:
    branches:
      - main
    paths:
      - "**/package.json"

jobs:
  check-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version and set env
        run: |
          dir
          $env:PACKAGE_VERSION=$(node -p "require('.\\package.json').version")
          echo %PACKAGE_VERSION%
          dir
  check-build:
    needs: check-windows
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: install webkit2gtk
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - run: yarn
      - name: build scoot-map-manager for tauri app
        run: yarn build
      - run: cargo install tauri-bundler --force
      - name: build tauri app
        run: npm run tauri:build

  create-release:
    needs: check-build
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_URL: ${{ steps.create_tauri_release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version
        run: echo ::set-env name=PACKAGE_VERSION::$(node -p "require('./package.json').version")
      - name: create release
        id: create_tauri_release
        uses: jbolda/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: "SCOOT Map Manager v${{ env.PACKAGE_VERSION }}"
          body: "See the assets to download this version and install."
          draft: true
          prerelease: false

  create-and-upload-assets:
    needs: create-release
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - platform: ubuntu-latest
            buildFolder: bundle/deb
            ext: "_amd64.deb"
            compressed: ""
          - platform: macos-latest
            buildFolder: bundle/dmg
            ext: ".dmg"
            compressed: ""
          - platform: windows-latest
            buildFolder: ""
            ext: ".x64.msi"
            compressed: ""

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - run: cargo install tauri-bundler --force
      - run: yarn
      - name: build scoot-map-manager for tauri app
        run: yarn build
      - name: build tauri app
        run: |
          cd src-tauri && cargo update && cd ../
          npm run tauri:build
      - name: get version
        run: echo ::set-env name=PACKAGE_VERSION::$(node -p "require('./package.json').version")
      - name: add version info for osx files
        if: matrix.platform == 'macos-latest'
        working-directory: ${{ format('./src-tauri/target/release/{0}', matrix.buildFolder ) }}
        run: |
          mv scoot-map-manager.dmg scoot-map-manager${{ env.PACKAGE_VERSION }}.dmg
      - name: add version info for msi files
        if: matrix.platform == 'windows-latest'
        run: |
          dir
          $env:PACKAGE_VERSION=$(node -p "require('.\\package.json').version")
      - name: add version info for msi files
        if: matrix.platform == 'windows-latest'
        working-directory: ${{ format('./src-tauri/target/release/{0}', matrix.buildFolder ) }}
        run: |
          ren scoot-map-manager.x64.msi scoot-map-manager${{ env.PACKAGE_VERSION }}.x64.msi
          # mv scoot-map-manager.x64.msi scoot-map-manager${{ env.PACKAGE_VERSION }}.x64.msi
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}
          asset_path: ${{ format('./src-tauri/target/release/{0}/scoot-map-manager{1}{2}{3}', matrix.buildFolder, env.PACKAGE_VERSION, matrix.ext, matrix.compressed ) }}
          asset_name: ${{ format('scoot-map-manager{0}{1}{2}', env.PACKAGE_VERSION, matrix.ext, matrix.compressed ) }}
          asset_content_type: application/zip
